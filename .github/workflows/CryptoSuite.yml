name: CryptoSuite

on:
  push:
  pull_request:

jobs:
  linters:
#   Setup our github virtual environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install all dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
#        for r in requirements*.txt; do pip install -r $r; done

#   Run linters
    - name: Analysing the code with pylint
      run: |
        # always exit with a 0 return code (or the pipeline will not continue)
        pylint `find . -name "*.py" -not -path "./.venv/*" | xargs` --exit-zero

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: applying black
      run: |
        black -v .

    - name: applying isort
      run: |
        isort --check-only --diff .

  tests:
    needs: linters
#   Setup our github virtual environment
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install all dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
      #        for r in requirements*.txt; do pip install -r $r; done
#   Run Unittests
    - name: running unittests with pytest
      run: |
        pytest -v -rsx

  push:
    needs: [ linters, tests ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Get the CryptoSuite version number
        run: |
          echo "tag=$(./cryptosuite.py -v)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: mimusica/cryptosuite
          tag: ${{ env.tag }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
